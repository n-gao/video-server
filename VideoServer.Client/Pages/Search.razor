@page "/search"
@using VideoServer.Shared
@using VideoServer.Shared.Models
@inject HttpClient Http

<h1>Search</h1>

<EditForm Model="@query" OnValidSubmit="@OnSearchSubmit">
    <div class="form-row">
        <div class="cold-md-12 form-group">
            <label for="input-query">Query</label>
            <InputText id="input-query" class="form-control" bind-Value="@query.Query" placeholder="Search text..."/>
        </div>
        <div class="col-md-4 form-group">
            <label for="range-skip">Skip @query.Skip s</label>
            <input id="range-skip" class="form-control-range" type="range" bind="@query.Skip" min="-60" max="60">
        </div>
        <div class="col-md-4 form-group">
            <label for="range-duration">Duration @query.Duration s</label>
            <input id="range-duration" class="form-control-range" type="range" bind="@query.Duration" min="5" max="60">
        </div>
    </div>
    <button class="btn btn-primary" type="submit">Search</button>
</EditForm>


@if (results == null)
{
    <p>Waiting for query...</p>
}
else
{
    <div class="row">
        @foreach (var result in results)
        {
            <SearchResult data="@result" skip="@query.Skip" duration="@query.Duration"></SearchResult>
        }
    </div>
}

@functions {
    QuoteResult[] results;
    SearchQuery query = new SearchQuery();

    public async Task OnSearchSubmit()
    {
        results = await Http.GetJsonAsync<QuoteResult[]>($"api/search?query={query.Query}");
    }
}
